"""Rename created_at_event to created_at in bookings table

Revision ID: c3d062b06b93
Revises: 21462bcb2693
Create Date: 2025-08-05 11:56:54.547678

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c3d062b06b93'
down_revision = '21462bcb2693'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        
    # Copy data from created_at_event to created_at
    op.execute("UPDATE bookings SET created_at = created_at_event WHERE created_at_event IS NOT NULL")
    
    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.drop_index('idx_bookings_event_type')
        batch_op.drop_index('idx_bookings_name')
        batch_op.drop_index('idx_bookings_series_id')
        batch_op.drop_column('created_at_event')

    with op.batch_alter_table('member', schema=None) as batch_op:
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=64),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=120),
               existing_nullable=False)
        batch_op.alter_column('phone',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=15),
               existing_nullable=True)
        batch_op.alter_column('firstname',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=64),
               existing_nullable=False)
        batch_op.alter_column('lastname',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=64),
               existing_nullable=False)
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=256),
               existing_nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=16),
               existing_nullable=False)
        batch_op.create_index(batch_op.f('ix_member_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_member_firstname'), ['firstname'], unique=False)
        batch_op.create_index(batch_op.f('ix_member_lastname'), ['lastname'], unique=False)
        batch_op.create_index(batch_op.f('ix_member_phone'), ['phone'], unique=False)
        batch_op.create_index(batch_op.f('ix_member_username'), ['username'], unique=True)

    with op.batch_alter_table('pool_registrations', schema=None) as batch_op:
        batch_op.drop_constraint('unique_pool_member', type_='unique')

    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=50),
               existing_nullable=False)

    with op.batch_alter_table('team_members', schema=None) as batch_op:
        batch_op.drop_constraint('unique_team_member', type_='unique')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('team_members', schema=None) as batch_op:
        batch_op.create_unique_constraint('unique_team_member', ['team_id', 'member_id'])

    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=64),
               existing_nullable=False)

    with op.batch_alter_table('pool_registrations', schema=None) as batch_op:
        batch_op.create_unique_constraint('unique_pool_member', ['pool_id', 'member_id'])

    with op.batch_alter_table('member', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_member_username'))
        batch_op.drop_index(batch_op.f('ix_member_phone'))
        batch_op.drop_index(batch_op.f('ix_member_lastname'))
        batch_op.drop_index(batch_op.f('ix_member_firstname'))
        batch_op.drop_index(batch_op.f('ix_member_email'))
        batch_op.alter_column('status',
               existing_type=sa.String(length=16),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
        batch_op.alter_column('password_hash',
               existing_type=sa.String(length=256),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('lastname',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
        batch_op.alter_column('firstname',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
        batch_op.alter_column('phone',
               existing_type=sa.String(length=15),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.alter_column('username',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)

    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at_event', sa.DATETIME(), nullable=True))
        
    # Copy data from created_at to created_at_event  
    op.execute("UPDATE bookings SET created_at_event = created_at WHERE created_at IS NOT NULL")
    
    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.create_index('idx_bookings_series_id', ['series_id'], unique=False)
        batch_op.create_index('idx_bookings_name', ['name'], unique=False)
        batch_op.create_index('idx_bookings_event_type', ['event_type'], unique=False)
        batch_op.drop_column('created_at')

    # ### end Alembic commands ###
